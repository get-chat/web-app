stages:
  - build
  - test


variables:
  NODE_IMAGE: node:16-alpine


cache:
  key:
    files:
      # compute our cache key from the lock file (`package-lock.json`)
      - package-lock.json
  paths:
    # cache `node_modules/` between our CI/CD pipeline runs, to optimize execution time
    - node_modules/


Build:
  stage: build
  image: $NODE_IMAGE

  only:
    - master
    - merge_requests
    - tags

  script:
    - npm install --prefer-offline --no-audit --no-fund
    - npm run build


Test:
  stage: test
  image: $NODE_IMAGE

  only:
    - master
    - merge_requests
    - tags

  script:
    - npm install --prefer-offline --no-audit --no-fund
    - npm test --
      --passWithNoTests
      --coverage --coverageReporters=text --coverageReporters=cobertura --coverageReporters=html

  # track our test coverage in GitLab's MR widget/ui
  coverage: '/All files.*\|\s+(\d+(?:\.\d+)?)/'

  # track our test coverage in GitLab's CI pipeline test reports
  artifacts:
    expose_as: Coverage HTML report
    paths:
      - coverage/
    reports:
      cobertura: coverage/cobertura-coverage.xml
